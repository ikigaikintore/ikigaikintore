name: ci backend

on:
  merge_group:
  pull_request:
    paths:
      - 'backend/**'

jobs:
  check_backend_changed_files:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    outputs:
      is_backend_changed: ${{ steps.is_backend_changed.outputs.HAS_CHANGES }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Set is_backend_changed
        id: is_backend_changed
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          has_changes=${{ contains(env.CHANGED_FILES, 'backend/') }}
          echo HAS_CHANGES=${has_changes} >> ${GITHUB_OUTPUT}

  check_backend_vulns:
    runs-on: ubuntu-latest
    if: needs.check_backend_changed_files.outputs.is_backend_changed == 'true'
    timeout-minutes: 2
    needs: check_backend_changed_files
    steps:

      - name: golang vulnchecker
        uses: golang/govulncheck-action@v1
        with:
          work-dir: ./backend
          go-version-file: ./backend/go.mod

  ci:
    runs-on: ubuntu-latest
    needs: check_backend_changed_files
    if: needs.check_backend_changed_files.outputs.is_backend_changed == 'true'

    strategy:
      matrix:
        go-version: [ '1.21', '1.22' ]

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: "**/go.sum"

      - name: Test
        run: |
          make tests

  end:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Notify
        run: |
          if [ ${{ needs.ci.result }} == 'success' ]; then
            echo "All tests passed"
            exit 0
          else
            echo "Tests failed"
            exit 1
          fi