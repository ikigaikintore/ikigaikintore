// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: endpoints.v1.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WeatherType int32

const (
	WeatherType_UNKNOWN      WeatherType = 0
	WeatherType_THUNDERSTORM WeatherType = 1
	WeatherType_DRIZZLE      WeatherType = 2
	WeatherType_RAIN         WeatherType = 3
	WeatherType_SNOW         WeatherType = 4
	WeatherType_MIST         WeatherType = 5
	WeatherType_SMOKE        WeatherType = 6
	WeatherType_HAZE         WeatherType = 7
	WeatherType_DUST         WeatherType = 8
	WeatherType_FOG          WeatherType = 9
	WeatherType_SAND         WeatherType = 10
	WeatherType_ASH          WeatherType = 11
	WeatherType_SQUALL       WeatherType = 12
	WeatherType_TORNADO      WeatherType = 13
	WeatherType_CLEAR        WeatherType = 14
	WeatherType_CLOUDS       WeatherType = 15
)

// Enum value maps for WeatherType.
var (
	WeatherType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "THUNDERSTORM",
		2:  "DRIZZLE",
		3:  "RAIN",
		4:  "SNOW",
		5:  "MIST",
		6:  "SMOKE",
		7:  "HAZE",
		8:  "DUST",
		9:  "FOG",
		10: "SAND",
		11: "ASH",
		12: "SQUALL",
		13: "TORNADO",
		14: "CLEAR",
		15: "CLOUDS",
	}
	WeatherType_value = map[string]int32{
		"UNKNOWN":      0,
		"THUNDERSTORM": 1,
		"DRIZZLE":      2,
		"RAIN":         3,
		"SNOW":         4,
		"MIST":         5,
		"SMOKE":        6,
		"HAZE":         7,
		"DUST":         8,
		"FOG":          9,
		"SAND":         10,
		"ASH":          11,
		"SQUALL":       12,
		"TORNADO":      13,
		"CLEAR":        14,
		"CLOUDS":       15,
	}
)

func (x WeatherType) Enum() *WeatherType {
	p := new(WeatherType)
	*p = x
	return p
}

func (x WeatherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeatherType) Descriptor() protoreflect.EnumDescriptor {
	return file_endpoints_v1_proto_enumTypes[0].Descriptor()
}

func (WeatherType) Type() protoreflect.EnumType {
	return &file_endpoints_v1_proto_enumTypes[0]
}

func (x WeatherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeatherType.Descriptor instead.
func (WeatherType) EnumDescriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{0}
}

type WeatherFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationCityName *string `protobuf:"bytes,1,opt,name=locationCityName,proto3,oneof" json:"locationCityName,omitempty"`
	Latitude         float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude        float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *WeatherFilter) Reset() {
	*x = WeatherFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherFilter) ProtoMessage() {}

func (x *WeatherFilter) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherFilter.ProtoReflect.Descriptor instead.
func (*WeatherFilter) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{0}
}

func (x *WeatherFilter) GetLocationCityName() string {
	if x != nil && x.LocationCityName != nil {
		return *x.LocationCityName
	}
	return ""
}

func (x *WeatherFilter) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *WeatherFilter) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type WeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeatherFilter *WeatherFilter `protobuf:"bytes,1,opt,name=weatherFilter,proto3,oneof" json:"weatherFilter,omitempty"`
}

func (x *WeatherRequest) Reset() {
	*x = WeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherRequest) ProtoMessage() {}

func (x *WeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherRequest.ProtoReflect.Descriptor instead.
func (*WeatherRequest) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{1}
}

func (x *WeatherRequest) GetWeatherFilter() *WeatherFilter {
	if x != nil {
		return x.WeatherFilter
	}
	return nil
}

type WeatherCurrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature float64     `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	WindSpeed   float64     `protobuf:"fixed64,2,opt,name=windSpeed,proto3" json:"windSpeed,omitempty"`
	Timestamp   uint64      `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Humidity    int32       `protobuf:"varint,4,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Weather     WeatherType `protobuf:"varint,5,opt,name=weather,proto3,enum=endpoints.v1.WeatherType" json:"weather,omitempty"`
	Icon        string      `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *WeatherCurrent) Reset() {
	*x = WeatherCurrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherCurrent) ProtoMessage() {}

func (x *WeatherCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherCurrent.ProtoReflect.Descriptor instead.
func (*WeatherCurrent) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{2}
}

func (x *WeatherCurrent) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WeatherCurrent) GetWindSpeed() float64 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *WeatherCurrent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WeatherCurrent) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherCurrent) GetWeather() WeatherType {
	if x != nil {
		return x.Weather
	}
	return WeatherType_UNKNOWN
}

func (x *WeatherCurrent) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type TemperatureRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max float64 `protobuf:"fixed64,1,opt,name=max,proto3" json:"max,omitempty"`
	Min float64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
}

func (x *TemperatureRange) Reset() {
	*x = TemperatureRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperatureRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureRange) ProtoMessage() {}

func (x *TemperatureRange) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureRange.ProtoReflect.Descriptor instead.
func (*TemperatureRange) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{3}
}

func (x *TemperatureRange) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *TemperatureRange) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

type WeatherDailyPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp        uint64            `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Temperature      float64           `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity         int32             `protobuf:"varint,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	TemperatureRange *TemperatureRange `protobuf:"bytes,4,opt,name=temperatureRange,proto3" json:"temperatureRange,omitempty"`
	Weather          WeatherType       `protobuf:"varint,5,opt,name=weather,proto3,enum=endpoints.v1.WeatherType" json:"weather,omitempty"`
	Icon             string            `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *WeatherDailyPoint) Reset() {
	*x = WeatherDailyPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherDailyPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherDailyPoint) ProtoMessage() {}

func (x *WeatherDailyPoint) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherDailyPoint.ProtoReflect.Descriptor instead.
func (*WeatherDailyPoint) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{4}
}

func (x *WeatherDailyPoint) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WeatherDailyPoint) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WeatherDailyPoint) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherDailyPoint) GetTemperatureRange() *TemperatureRange {
	if x != nil {
		return x.TemperatureRange
	}
	return nil
}

func (x *WeatherDailyPoint) GetWeather() WeatherType {
	if x != nil {
		return x.Weather
	}
	return WeatherType_UNKNOWN
}

func (x *WeatherDailyPoint) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type WeatherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeatherPoint   []*WeatherDailyPoint `protobuf:"bytes,1,rep,name=weatherPoint,proto3" json:"weatherPoint,omitempty"`
	WeatherCurrent *WeatherCurrent      `protobuf:"bytes,2,opt,name=weatherCurrent,proto3" json:"weatherCurrent,omitempty"`
}

func (x *WeatherReply) Reset() {
	*x = WeatherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherReply) ProtoMessage() {}

func (x *WeatherReply) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherReply.ProtoReflect.Descriptor instead.
func (*WeatherReply) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{5}
}

func (x *WeatherReply) GetWeatherPoint() []*WeatherDailyPoint {
	if x != nil {
		return x.WeatherPoint
	}
	return nil
}

func (x *WeatherReply) GetWeatherCurrent() *WeatherCurrent {
	if x != nil {
		return x.WeatherCurrent
	}
	return nil
}

type FilterSpam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Before *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3,oneof" json:"before,omitempty"`
	After  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=after,proto3,oneof" json:"after,omitempty"`
}

func (x *FilterSpam) Reset() {
	*x = FilterSpam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterSpam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterSpam) ProtoMessage() {}

func (x *FilterSpam) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterSpam.ProtoReflect.Descriptor instead.
func (*FilterSpam) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{6}
}

func (x *FilterSpam) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *FilterSpam) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *FilterSpam) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

type Spam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Content string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Date    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Id      string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Spam) Reset() {
	*x = Spam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spam) ProtoMessage() {}

func (x *Spam) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spam.ProtoReflect.Descriptor instead.
func (*Spam) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{7}
}

func (x *Spam) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Spam) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Spam) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Spam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	Message  *Spam  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MailRequest) Reset() {
	*x = MailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoints_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailRequest) ProtoMessage() {}

func (x *MailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_endpoints_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailRequest.ProtoReflect.Descriptor instead.
func (*MailRequest) Descriptor() ([]byte, []int) {
	return file_endpoints_v1_proto_rawDescGZIP(), []int{8}
}

func (x *MailRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *MailRequest) GetMessage() *Spam {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_endpoints_v1_proto protoreflect.FileDescriptor

var file_endpoints_v1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd3,
	0x01, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x10, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x22, 0x84, 0x02, 0x0a,
	0x11, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x4a,
	0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x04, 0x53,
	0x70, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x6d, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0xc2,
	0x01, 0x0a, 0x0b, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x48, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x52, 0x49, 0x5a, 0x5a, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4e, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x4d, 0x49, 0x53, 0x54, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x4f, 0x4b,
	0x45, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x5a, 0x45, 0x10, 0x07, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x55, 0x53, 0x54, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x47, 0x10, 0x09,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x4e, 0x44, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x48, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x51, 0x55, 0x41, 0x4c, 0x4c, 0x10, 0x0c, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x4f, 0x52, 0x4e, 0x41, 0x44, 0x4f, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x55, 0x44,
	0x53, 0x10, 0x0f, 0x32, 0x51, 0x0a, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x7c, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x38,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x53, 0x70, 0x61, 0x6d, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x6d, 0x12, 0x3a, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_endpoints_v1_proto_rawDescOnce sync.Once
	file_endpoints_v1_proto_rawDescData = file_endpoints_v1_proto_rawDesc
)

func file_endpoints_v1_proto_rawDescGZIP() []byte {
	file_endpoints_v1_proto_rawDescOnce.Do(func() {
		file_endpoints_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_endpoints_v1_proto_rawDescData)
	})
	return file_endpoints_v1_proto_rawDescData
}

var file_endpoints_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_endpoints_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_endpoints_v1_proto_goTypes = []interface{}{
	(WeatherType)(0),              // 0: endpoints.v1.WeatherType
	(*WeatherFilter)(nil),         // 1: endpoints.v1.WeatherFilter
	(*WeatherRequest)(nil),        // 2: endpoints.v1.WeatherRequest
	(*WeatherCurrent)(nil),        // 3: endpoints.v1.WeatherCurrent
	(*TemperatureRange)(nil),      // 4: endpoints.v1.TemperatureRange
	(*WeatherDailyPoint)(nil),     // 5: endpoints.v1.WeatherDailyPoint
	(*WeatherReply)(nil),          // 6: endpoints.v1.WeatherReply
	(*FilterSpam)(nil),            // 7: endpoints.v1.FilterSpam
	(*Spam)(nil),                  // 8: endpoints.v1.Spam
	(*MailRequest)(nil),           // 9: endpoints.v1.MailRequest
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_endpoints_v1_proto_depIdxs = []int32{
	1,  // 0: endpoints.v1.WeatherRequest.weatherFilter:type_name -> endpoints.v1.WeatherFilter
	0,  // 1: endpoints.v1.WeatherCurrent.weather:type_name -> endpoints.v1.WeatherType
	4,  // 2: endpoints.v1.WeatherDailyPoint.temperatureRange:type_name -> endpoints.v1.TemperatureRange
	0,  // 3: endpoints.v1.WeatherDailyPoint.weather:type_name -> endpoints.v1.WeatherType
	5,  // 4: endpoints.v1.WeatherReply.weatherPoint:type_name -> endpoints.v1.WeatherDailyPoint
	3,  // 5: endpoints.v1.WeatherReply.weatherCurrent:type_name -> endpoints.v1.WeatherCurrent
	10, // 6: endpoints.v1.FilterSpam.before:type_name -> google.protobuf.Timestamp
	10, // 7: endpoints.v1.FilterSpam.after:type_name -> google.protobuf.Timestamp
	10, // 8: endpoints.v1.Spam.date:type_name -> google.protobuf.Timestamp
	8,  // 9: endpoints.v1.MailRequest.message:type_name -> endpoints.v1.Spam
	2,  // 10: endpoints.v1.Weather.GetWeather:input_type -> endpoints.v1.WeatherRequest
	7,  // 11: endpoints.v1.Mail.ListSpam:input_type -> endpoints.v1.FilterSpam
	9,  // 12: endpoints.v1.Mail.Reply:input_type -> endpoints.v1.MailRequest
	6,  // 13: endpoints.v1.Weather.GetWeather:output_type -> endpoints.v1.WeatherReply
	8,  // 14: endpoints.v1.Mail.ListSpam:output_type -> endpoints.v1.Spam
	11, // 15: endpoints.v1.Mail.Reply:output_type -> google.protobuf.Empty
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_endpoints_v1_proto_init() }
func file_endpoints_v1_proto_init() {
	if File_endpoints_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_endpoints_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherCurrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemperatureRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherDailyPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterSpam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoints_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_endpoints_v1_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_endpoints_v1_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_endpoints_v1_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_endpoints_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_endpoints_v1_proto_goTypes,
		DependencyIndexes: file_endpoints_v1_proto_depIdxs,
		EnumInfos:         file_endpoints_v1_proto_enumTypes,
		MessageInfos:      file_endpoints_v1_proto_msgTypes,
	}.Build()
	File_endpoints_v1_proto = out.File
	file_endpoints_v1_proto_rawDesc = nil
	file_endpoints_v1_proto_goTypes = nil
	file_endpoints_v1_proto_depIdxs = nil
}
